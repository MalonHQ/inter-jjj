spring.application.name=STAFFPS
server.port=8080
# ========================
# DATABASE CONFIGURATION
# ========================
spring.datasource.url=jdbc:postgresql://localhost:5432/STAFFPS
spring.datasource.username=postgres
spring.datasource.password=Must@Lab1#
spring.datasource.driver-class-name=org.postgresql.Driver
# ========================
# HIKARI CONNECTION POOL
# Maintains a pool of active connections
# Reuses connections instead of creating new ones
#Improves performance by reducing connection overhead
# Manages connection lifecycle (timeouts, leaks, etc.)
# ========================

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.pool-name=SpringBootHikariCP

# ========================
# JPA  defines a standard way to:
# Map Java objects (entities) to database tables (ORM - Object-Relational Mapping)
# Perform CRUD (Create, Read, Update, Delete) operations
# Manage database transactions
# Write queries using JPQL (Java Persistence Query Language)
# HIBERNATE
#  most popular implementation of the JPA specification. It provides:
#  All JPA features + extra enhancements
#  Better performance optimizations (caching, batch processing, lazy loading)
#  Additional annotations and APIs beyond JPA
#  HQL (Hibernate Query Language) ? more powerful than JPQL
#  Automatic Dirty Checking (tracks changes to entities)
# ========================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false

# ========================
# ACTUATOR
# is a production-ready monitoring and management module that provides:
# HTTP endpoints (like /health, /metrics) for app monitoring
# Production-grade features (health checks, auditing, metrics)
# JMX support for remote management
#  Auto-configured in Spring Boot
# ========================
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=always
management.endpoint.env.enabled=true
management.endpoint.metrics.enabled=true

# ========================
# LOGGING
# is the process of recording events, messages, and data during software execution to:
# Track application behavior
# Debug issues
# Monitor performance
# Audit security events
# ========================
# application.properties - Weka hizi settings
logging.level.com.staffpermission=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Show detailed error messages
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always
server.error.include-exception=true
# ========================
# DEVTOOLS
#is a developer productivity module that provides:
#Automatic application restarts when code changes
#Live reload for web applications
#Development-only configurations
#Enhanced debugging capabilities
# ========================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
debug=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.default-property-inclusion=non_null
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=UTC
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
# Thymeleaf configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false

